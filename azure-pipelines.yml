# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - staging
  - main
  - test

resources:
  - repo: self

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isTest: $[eq(variables['Build.SourceBranch'], 'refs/heads/test')]
  appName: 'web-trialsync-sponsor-platform-prod'
  azureSubscription: 'Microsoft ISV Sponsorship(7644737a-f4e2-4e73-a9f6-957528050d04)'
  ResourceGroupName: 'eun-dev-trialsync-prod-rg'
  testResourceGroupName: 'eun-dev-trialsync-test-rg'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e99afaf7-8086-450d-b3c6-f5c7046d7615'
  imageRepository: 'trialsync-sponsor-platform'
  containerRegistry: 'trialsynccontainerregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/docker/production/Dockerfile'
  test-dockerfilePath: '$(Build.SourcesDirectory)/docker/development/Dockerfile'

  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            condition: eq(variables.isTest, false)
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              buildContext: .
              tags: |
                $(tag)
          - task: Docker@2
            condition: eq(variables.isTest, true)
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(test-dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              buildContext: .
              tags: |
                $(tag)
          - task: AzureRmWebAppDeployment@4
            condition: and(succeeded(), eq(variables.isTest, false))
            displayName: 'Azure Web App Deploy'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: $(azureSubscription)
              appType: 'webAppContainer'
              WebAppName: $(appName)
              ResourceGroupName: $(ResourceGroupName)
              DockerNamespace: '$(containerRegistry)'
              DockerRepository: '$(imageRepository)'
              DockerImageTag: '$(tag)'
          - task: AzureRmWebAppDeployment@4
            condition: and(succeeded(), eq(variables.isTest, true))
            displayName: 'Azure Web App Deploy'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: $(azureSubscription)
              appType: 'webAppContainer'
              WebAppName: 'web-trialsync-sponsor-platform-test'
              ResourceGroupName: $(testResourceGroupName)
              DockerNamespace: '$(containerRegistry)'
              DockerRepository: '$(imageRepository)'
              DockerImageTag: '$(tag)'
